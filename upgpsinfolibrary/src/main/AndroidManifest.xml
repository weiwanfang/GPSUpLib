<?xml version="1.0" encoding="utf-8"?>
<manifest
    package="com.example.upgpsinfolibrary"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    >

    <application android:label="@string/app_name">
        <!--下面的辅助接收器和核心业务服务必须配置在同一个进程中______________start-->
        <receiver
            android:name=".wakeup.assistantReceiver"
            android:enabled="true"
            android:exported="true"
            android:process=":business">
        </receiver>

        <service
            android:name="com.example.upgpsinfolibrary.service.TraceServiceImpl"
            android:enabled="true"
            android:exported="true"
            android:process=":business">
        </service>
        <!--下面的辅助接收器和核心业务服务必须配置在同一个进程中______________end-->


        <!--唤醒接收器必须在application模块，只需要定义两个SDK内部的ACTION即可，便于唤醒 业务服务_________start-->
        <receiver
            android:name=".wakeup.WakeUpReceiver"
            android:process=":watch">
            <intent-filter>
                <!--用于取消服务工作,定义在SDK内部-->
                <action android:name="com.revenco.daemon.java.CANCEL_JOB_ALARM_SUB"/>
                <!--更加多的唤醒方式，在SDK内部实现，然后外发这个ACTION广播，实现唤醒-->
                <action android:name="com.revenco.daemon.java.ACTION_WAKE_UP_BY_MORE_METHOD"/>
            </intent-filter>
        </receiver>
        <!--唤醒接收器必须在application模块，只需要定义两个SDK内部的ACTION即可，便于唤醒 业务服务_________end-->


        <service
            android:name="com.example.upgpsinfolibrary.service.UpDataService"
            android:enabled="true">
            <intent-filter>
                <action android:name="com.example.upgpsinfolibrary.service.UpDataService"/>
            </intent-filter>
        </service>
    </application>


</manifest>